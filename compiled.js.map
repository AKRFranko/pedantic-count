{"version":3,"sources":["src/count.js"],"names":[],"mappings":"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","file":"compiled.js","sourcesContent":["  /**\n  * @file Count.js\n  * @author Franko <franko@akr.club>\n  * @version 0.1\n  */\n  \n  /**\n   * History WeakMap for all instances\n   * @const histMap\n   */\n  const histMap = new WeakMap();\n  \n  /**\n  * Loglines WeakMap for all instances\n  * @const logMap\n  */\n  const logMap  = new WeakMap();\n  \n  /**\n  * histories memo\n  * @const histories\n  */\n  const histories = function (object) {\n      if (!histMap.has(object))\n          histMap.set(object, [ ]);\n      return histMap.get(object);\n  };\n  \n  \n  \n  /**\n  * loglines memo\n  * @const loglines\n  */\n  const loglines = function (object) {\n      if (!logMap.has(object))\n          logMap.set(object, [ ]);\n      return logMap.get(object);\n  };\n  \n  const explanation = function( loglines, history, result, indent ){\n    result = result||['\\nScenario: Explain a Count'];\n    indent = indent||0;\n    \n    history.forEach( ( n, i )=>{\n      let log = loglines[i];\n      if(Array.isArray(log)){\n        let hist = new Array(log.length);\n        hist.fill( n );\n        indent++;\n        return explanation( log, hist, result, indent );\n      }else{\n        result.push( /^initialize/.test(log) ? 'When I ' + log : 'And I ' + log);\n      }\n    });\n    var space = new Array(indent).fill(' ').join('');\n    indent--;\n    return result.join('\\n'+space+' ');\n  }\n  \n  \n  \n  class BaseCount{\n    \n    static __defineProperty( obj, name, instance, logging ){\n      \n      Object.defineProperty( obj, name, {\n        enumerable: true,\n        value: instance\n      });\n      \n      if(!obj.__countProperties__){\n        Object.defineProperty( obj, '__countProperties__', {\n          enumerable: false,\n          writeable: true,\n          value: {}\n        }); \n      }\n      \n      Object.defineProperty( obj.__countProperties__, name, {\n        enumerable: true,\n        get: ()=>{ return  instance }\n      });\n      \n      Object.defineProperty( obj, name +'History', {\n        get: ()=>{ return  instance.history }\n      });\n      \n      if(logging){\n        \n        Object.defineProperty( obj, name + 'Log', {\n          get: ()=>{ return  instance.log }\n        });\n        \n        Object.defineProperty( obj, name + 'Explanation', {\n          get: ()=>{ return  instance.explain().replace(/Explain a Count/g, 'Explain a Count named ' + name  ) }\n        });  \n        \n        var oldExplain = obj.explainCounts;\n        obj.explainCounts = ()=>{\n          var previous = oldExplain ? oldExplain.call( obj ) : null;\n          var bunch = previous ? [ previous ] : [];\n          Object.keys(obj.__countProperties__).forEach( ( name )=>{\n            bunch.push(obj[name+'Explanation'])\n          });\n          return bunch.join(\"\\n\");\n        }\n      }\n  \n    }\n    \n    \n    static defineProperty( obj, name, init, strict, logging ){\n      var clazz = BaseCount\n      if( logging ){\n        clazz = LoggingCount;\n      }else if( strict ){\n        clazz = StrictCount;\n      }\n      var instance = new clazz( init );\n      \n      if(typeof Object.getPrototypeOf(obj) == 'function'){\n        BaseCount.__defineProperty( obj.prototype, name, instance, logging );\n      }else{\n        BaseCount.__defineProperty( obj, name, instance,logging );\n      }\n      \n      return obj;\n    }\n    \n    /**\n    * Represents a Count.\n    * @constructor\n    * @param {number} initial - The initial value\n    */  \n    \n    constructor(initial){\n      if(isNaN(initial)){\n        this.set( 0 );\n      }else{\n        this.set(initial);\n      }\n    }\n    \n    /**\n    * Returns the numeric value of the count\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    valueOf(){\n      return Number(histories(this).reduce( (t,n)=>{ return t + n; }, 0 ));\n    }\n    \n    /**\n    * Returns the array of values used to calculate the result.\n    * @returns {array} The values for all changes\n    */  \n    \n    get history(){\n      return Array.from(histories(this));\n    }\n    \n    /**\n    * Returns the length of the history\n    * @returns {array} The values for all changes\n    */  \n    \n    get length(){\n      return histories(this).length;\n    }\n  \n    /**\n    * Returns the numeric value of the count\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    get(){\n      return 1*this;\n    }\n    \n    /**\n    * Adds a new value to the history\n    * @param {number} value - An integer\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    set(v){\n      if(isNaN(v)){\n        return this.valueOf;\n      }\n      \n      if( typeof v.history !== 'undefined'){\n        v.history.forEach( ( v )=>{\n          this.set( v );\n        });\n      }else{\n        histories(this).push( v );  \n      }\n      \n      return this.valueOf;\n    }\n    \n    /**\n    * Adds a new value incrementation the history\n    * @param {number} value - A non-negative integer\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    incr(n){\n      \n      if(isNaN(n) ){\n          n=0;\n      }\n      if(n<0 ){\n        n = Math.abs(n);\n      }\n      return this.set( n );\n    }\n    \n    /**\n    * Adds a new value decrementation the history\n    * @param {number} value - A non-negative integer\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    decr(n){\n      \n      if(isNaN(n) ){\n        n=0;\n      }\n      if(n<0 ){\n        n = Math.abs(n);\n      }\n      \n      return this.set( -1*n );\n    }\n    \n    /**\n    * Returns the history to the first value set.\n    * @returns {number} The sum of the historical changes (the initial value) \n    */  \n    \n    reset(){\n      var h = histories(this);\n      var first = h.shift();\n      h.splice(0, h.length);\n      h.push( first );\n      return this.get();\n    }\n    \n    \n  }\n  \n  class StrictCount extends BaseCount{\n    /**\n    * Represents a Strict Count.\n    * @constructor\n    * @param {number} initial - The initial value (required)\n    */  \n    constructor(initial){\n      if(isNaN(initial)) throw new ReferenceError('Cannot initialize without numeric value');\n      super(initial);\n    }\n    \n    /**\n    * Adds a new value incrementation the history\n    * @param {number} value - A non-negative integer (required)\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    incr(n){\n      if(isNaN(n)) throw new ReferenceError('Cannot set non-numeric value');\n      if(n < 0) throw new ReferenceError('Cannot increment by negative value');\n      return super.incr(n);\n    }\n    \n    /**\n    * Adds a new value decrementation the history\n    * @param {number} value - A non-negative integer (required)\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    decr(n){\n      if(isNaN(n)) throw new ReferenceError('Cannot set non-numeric value');\n      if(n < 0) throw new ReferenceError('Cannot decrement by negative value');\n      return super.decr(n);\n    }\n    \n    /**\n    * Adds a new value to the history\n    * @param {number} value - An integer (required)\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    set(v){\n      if(isNaN(v)) throw new ReferenceError('Cannot set non-numeric value');\n      return super.set(v);\n    }\n  }\n  \n  class LoggingCount extends StrictCount{\n    \n    __defaultMessage( v, message ){\n      var prefix = this.length === 1 ? 'initialize to' : message ? message : v < 0 ? 'decrement by' : 'increment by';\n      return [prefix, Math.abs(v) ].join(' ');\n    }\n    \n    /**\n    * Adds a new value to the history\n    * @param {number} value - An integer (required)\n    * @param {string} message - A message associated with this modification (required)\n    * @returns {number} The sum of the historical changes\n    */ \n    \n    set( v, message, fn ){\n      // fn = fn || 'set';\n      var result = super.set( v );\n      message = this.__defaultMessage( v, message );\n      if( typeof v.log != 'undefined'){\n        v.log.forEach( ( l, i )=>{\n          loglines(this).push( l );\n        });\n      }else{\n        loglines(this).push( message );\n      }\n      return result;\n    }\n    \n    /**\n    * Adds a new value incrementation the history\n    * @param {number} value - A non-negative integer (required)\n    * @param {string} message - A message associated with this modification (required)\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    incr(v,message){\n      return this.set(v,message);\n    }\n    \n    /**\n    * Adds a new value decrementation the history\n    * @param {number} value - A non-negative integer (required)\n    * @param {string} message - A message associated with this modification (required)\n    * @returns {number} The sum of the historical changes\n    */  \n    \n    decr(v,message){\n      return this.set(-1* Math.abs(v),message);\n    }\n    \n    /**\n    * Returns log of messages associated with value changes.\n    * @returns {mixed} an array of messages or message arrays\n    */  \n    \n    get log(){\n      return Array.from(loglines(this));\n    }\n    \n    /**\n    * Returns the history to the first value set, sets the first log entry as the entire log and adds a \"reset\" message\n    * @returns {number} The sum of the historical changes (the initial value) \n    */  \n    \n    reset(){\n      super.reset();\n      var initial = histories(this)[0];\n      var l = loglines(this);\n      var first = Array.from(l);\n      first.push('reset to ' + initial);\n      l.splice(0, l.length);\n      l.push( first );\n      return this.get();\n    }\n    \n    explain(){\n      var explained = explanation( loglines(this), histories(this) );\n      if(/Then the value equals \\d/.test(explained)){\n        return explained;\n      }\n      var total = this.get();\n      var space = explained.split('\\n').pop().replace(/^(\\s+).+/,\"$1\");\n      return explained + `\\n${space}Then the value equals ${total}`;\n    }\n  }\n  \n  \n  /**\n   * Index Map\n   * @const indexMap\n   */\n  const indexMap = new Map();\n  const indexLinks = new Map();\n  const virtMap = new Map();\n  class CountIndex{\n  \n    static get map(){\n      return indexMap;\n    }\n    \n    static clear(){\n      indexMap.clear();\n      indexLinks.clear();\n      virtMap.clear();\n      return true;\n    }\n    \n    static clearIndex( name ){\n      indexMap.delete(name);\n      indexLinks.delete(name);\n      virtMap.delete(name);\n      return true;\n    }\n    \n    static createIndex( name ){\n      if(!this.map.has(name)){\n        var idMap = new Map();\n        idMap.set('ids', new Map() );\n        this.map.set( name, idMap );\n      }\n      return new CountIndex( name );\n    }\n    \n    static createVirtual( name, defaultValue ){\n      if(!this.map.has(name)){\n        var idMap = new Map();\n        idMap.set('ids', new Map() );\n        this.map.set( name, idMap );\n      }\n      virtMap.set( name, defaultValue );\n      return new CountIndex( name );\n    }\n    \n    static index( name ){\n      return this.map.get( name );\n    }\n    static exists( name ){\n      return this.map.has( name );\n    }\n    \n    static getIds( name ){\n      if( !this.exists(name) ) return [];\n      return Array.from(this.index(name).get('ids').keys());\n    }\n    \n    static getCounts( name ){\n      if( !this.exists(name) ) return [];\n      return Array.from(this.index(name).get('ids').values());\n    }\n    static getTotal( name ){\n      return this.getCounts(name).reduce( ( t, c )=>{\n        return t + c;\n      }, 0);\n    }\n    \n    static hasCount( name, id ){\n      return this.map.has(name) && this.index(name).has('ids') && this.index(name).get('ids').has( id );\n    }\n    \n    static getCount( name, id ){\n      if(!this.hasCount( name, id )){\n        if(virtMap.has(name)) return virtMap.get(name);\n        throw new ReferenceError('No index for \"#'+id+'\" @ \"'+name+'\".');\n      }\n      var count = this.map.get( name ).get( 'ids' ).get(id);\n      if(!indexLinks.has( name )){\n        return count;\n      }\n      var links = Array.from(indexLinks.get( name ).values());\n      \n      return links.reduce( (t,l)=>{\n        return t - this.getCount( l, id );\n      }, count )\n      // console.log('lnk', linkName)\n      // var linkCount = this.getCount(linkName, id );\n      // return count - linkCount;\n      \n    }\n    \n    static setCount( name, id, value ){\n      if(this.hasCount( name, id )){\n        throw new ReferenceError('Initial Count can only me set once for \"#'+id+'\" @ \"'+name+'\".');\n      }else{\n        return this.map.get( name ).get('ids').set(id, new LoggingCount(value));\n      }\n    }\n    \n    static incrCount( name, id, n ){\n      if(!this.hasCount( name, id )){\n        if(virtMap.has(name)){\n          this.setCount( name, id, virtMap.get(name));\n          return this.incrCount( name, id, n );\n        }\n        throw new ReferenceError('No count for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).incr( n );\n      }\n    }\n    static decrCount( name, id, n ){\n      if(!this.hasCount( name, id )){\n        if(virtMap.has(name)){\n          this.setCount( name, id, virtMap.get(name));\n          return this.decrCount( name, id, n );\n        }\n        throw new ReferenceError('No count for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).decr( n )\n      }\n    }\n    \n    static resetCount( name, id){\n      if(!this.hasCount( name, id )){\n        return true;\n        // throw new ReferenceError('No count for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).reset()\n      }\n    }\n  \n    static getHistory( name, id ){\n      if(!this.hasCount( name, id )){\n        throw new ReferenceError('No history for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).history;\n      }\n    }\n    \n    static getLog( name, id ){\n      if(!this.hasCount( name, id )){\n        throw new ReferenceError('No log for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).log;\n      }\n    }\n    \n    static explain( name, id ){\n      if(!this.hasCount( name, id )){\n        throw new ReferenceError('No explanation for id \"'+id+'\".');\n      }else{\n        return this.map.get( name ).get('ids').get(id).explain().replace('Scenario: Explain a Count', \"Scenario: Explain \"+name+\" for the id \" + id );\n      }\n    }\n    \n    static link( a, b ){\n      if(!indexLinks.has(a)){\n        indexLinks.set(a, new Set() );\n      }\n      indexLinks.get(a).add(b);\n      return true;\n    }\n    \n    constructor( name ){\n      \n      this.name = name;\n    } \n    \n    get ids(){\n      return CountIndex.getIds( this.name );\n    }\n    \n    get counts(){\n      return CountIndex.getCounts( this.name );\n    }\n    \n    set( id, initialCount ){\n      return CountIndex.setCount( this.name, id, initialCount );\n    }\n    \n    get( id ){\n      return CountIndex.getCount( this.name, id );\n    }\n    \n    incr( id, n ){\n     return CountIndex.incrCount( this.name, id, n );\n    }\n    \n    decr( id, n ){\n     return CountIndex.decrCount( this.name, id, n );\n    }\n    \n    \n    history( id ){\n      return CountIndex.getHistory( this.name, id );\n    }\n    \n    log( id ){\n      return CountIndex.getLog( this.name, id );\n    }\n    \n    explain( id ){\n      return CountIndex.explain( this.name, id );\n    }\n    \n    link( name ){\n      CountIndex.link( this.name, name );\n      return true;\n    }\n    \n  }\n  \n  class VirtualIndex extends CountIndex{\n    constructor( name ){\n      super(name);\n      \n      this.virtual = true;\n    }\n  }\n  \n  \nmodule.exports = {\n  CountIndex:CountIndex,\n  Count:BaseCount,\n  StrictCount:StrictCount,\n  LoggingCount:LoggingCount\n}  \n"]}